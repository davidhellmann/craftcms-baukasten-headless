---
const {
    PUBLIC_LIVE_PREVIEW,
} = import.meta.env;

export async function getStaticPaths() {
    const response = await fetch(import.meta.env.PUBLIC_API_URL, {
        method: 'POST',
        body: JSON.stringify({
            query: `
                    query getPages($section: [String]!, $site: [String] = "*") {
                        pages: entries(section: $section, site: $site){
                            id
                            title
                            uri
                            slug
                            typeHandle
                            sectionHandle
                            siteId
                            }
                        }
                    `,
            variables: {
                section: ['pages'],
                site: ['default']
            }
        }),
        headers: {
            'Content-Type': 'application/json',
            'Authorization': import.meta.env.PUBLIC_API_TOKEN,
        },
    }).then(response => response.json());


    const { data: { pages } } = await response

    return pages.map((page: any) => {
        return {
            params: {
                uri: page.uri,
            },
            props: { page },
        };
    });
}

const { uri, site } = Astro.params;
const { page } = Astro.props;

---

<h1>{uri}: {page}</h1>
<h2>Live preview: {PUBLIC_LIVE_PREVIEW}</h2>
<h3>Site: {site}</h3>