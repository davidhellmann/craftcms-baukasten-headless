---
import { setCompVariants } from '@utils/setCompVariants';

export interface Props {
  propTypeHandle?: string;
  propSectionBackgroundColor: string;
  propSectionPaddingVertical: string;
  propSpaceBetweenBlocks: string;
  propRootClasses?: string;
}

// Comp Settings
const cs: ICompSettings = {
  name: 'c-blockSection',
  ...(Astro.props as Props),
};

// Comp Classes
const cc: ICompClasses = {
  root: 'w-screen max-w-full',
  rootCustom: cs.propRootClasses || '',
  inner: 'container',
  variants: {
    propSectionBackgroundColor: {
      transparent: 'bg-transparent',
      light: 'bg-gray-100',
      dark: 'bg-gray-800 text-white',
      default: 'transparent',
    },
    propSectionPaddingVertical: {
      zero: '',
      sm: 'py-2 md:py-4',
      md: 'py-4 md:py-8',
      lg: 'py-8 md:py-16',
      xl: 'py-16 md:py-32',
      '2xl': 'py-32 md:py-64',
      default: 'md',
    },
    propSpaceBetweenBlocks: {
      zero: '',
      sm: 'space-y-2 md:space-y-4',
      md: 'space-y-4 md:space-y-8',
      lg: 'space-y-8 md:space-y-16',
      xl: 'space-y-16 md:space-y-32',
      '2xl': 'space-y-32 md:space-y-64',
      default: 'md',
    },
  },
};

const compClasses = [
  cs.name,
  cc.root,
  cc.rootCustom,
  ...setCompVariants({
    variants: cc.variants,
    props: cs,
    useVariants: ['propSectionPaddingVertical', 'propSectionBackgroundColor'],
  }),
].join(' ');
---

<section class={compClasses}>
  <div
    class={[
      cc.inner,
      ...setCompVariants({
        variants: cc.variants,
        props: cs,
        useVariants: ['propSpaceBetweenBlocks'],
      }),
    ].join(' ')}
  >
    <slot />
  </div>
</section>
