---
import type { MessageType } from "@/utils/i18n";
// Infos
import EntryInfo from "@/layouts/_partials/EntryInfo.astro";

// Singles

import ViewHome from "@/views/home/home.astro";

// Pages
import ViewPagesContentBuilder from "@/views/pages/contentBuilder.astro";
import ViewPagesOverviewNews from "@/views/pages/overviewNews.astro";

// News
import ViewNewsContentBuilder from "@/views/news/contentBuilder.astro";

export interface Props {
  siteHandle: string;
  siteId: number;
  sectionHandle: string;
  typeHandle: string;
  uri: string;
  entryId: string;
  translations: MessageType[];
  token: string;
  xCraftPreview: string;
  xCraftLivePreview: string;
}

const {
  siteHandle,
  sectionHandle,
  typeHandle,
  uri,
  entryId,
  siteId,
  token,
  xCraftPreview,
  xCraftLivePreview,
  translations,
} = Astro.props;

// Get the right layout based on the site handle
let View: object = ViewHome;

const views: IViews<object> = {
  home: {
    home: ViewHome,
  },
  pages: {
    contentBuilder: ViewPagesContentBuilder,
    overviewNews: ViewPagesOverviewNews,
  },
  news: {
    contentBuilder: ViewNewsContentBuilder,
  },
};

if (sectionHandle in views) {
  const section = views[sectionHandle] ?? null;
  if (section && typeHandle in section) {
    View = section[typeHandle];
  }
}
---

{
  siteId && entryId && (
    <View
      uri={uri}
      siteHandle={siteHandle}
      siteId={siteId}
      typeHandle={typeHandle}
      sectionHandle={sectionHandle}
      entryId={entryId}
      translations={translations}
      token={token}
      xCraftPreview={xCraftPreview}
      xCraftLivePreview={xCraftLivePreview}
    />
  )
}
<EntryInfo
  uri={uri}
  siteHandle={siteHandle}
  siteId={siteId}
  typeHandle={typeHandle}
  sectionHandle={sectionHandle}
  entryId={entryId}
  token={token}
  xCraftPreview={xCraftPreview}
  xCraftLivePreview={xCraftLivePreview}
/>
