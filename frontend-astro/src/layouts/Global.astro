---
import DefaultLayout from "@/layouts/Default.astro";
import type { ISEO } from "@/utils/parseSEO";
import { parseSEO } from "@/js/utils/parseSEO";
import { getTranslations } from "@/utils/i18n";

import {
  GetSeomaticDocument,
  GetSeomaticQuery,
  GetSeomaticQueryVariables,
} from "@/graphql/gql/graphql";

import { getGqlData } from "@/graphql/client/graphql-client";

export interface Props {
  lang: string;
  siteHandle: string;
  siteId: number;
  sectionHandle: string;
  typeHandle: string;
  uri: string;
  entryId: string | number;
  token?: string;
  xCraftPreview?: string;
  xCraftLivePreview?: string;
}

const {
  lang,
  siteHandle,
  siteId,
  sectionHandle,
  typeHandle,
  uri,
  entryId,
  token,
  xCraftPreview,
  xCraftLivePreview,
} = Astro.props;

// Translations
const translations = lang ? await getTranslations(lang) : [];

if (!uri) {
  Astro.response.status = 404;
  Astro.response.statusText = "Not found";
}

const { seomatic } = (await getGqlData<GetSeomaticQueryVariables>(
  GetSeomaticDocument,
  {
    siteId: siteId,
    uri: uri,
  },
  {
    token,
    xCraftPreview,
    xCraftLivePreview,
  },
)) as GetSeomaticQuery;

const seo: ISEO = parseSEO(seomatic);

// Get the right layout based on the site handle
let Layout: object = DefaultLayout;
const Layouts: { [k: string]: object } = {
  default_en: DefaultLayout,
  default_de: DefaultLayout,
};

if (siteHandle && Layouts && siteHandle in Layouts) {
  Layout = Layouts[siteHandle];
}
---

<!doctype html>
<html lang={lang}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />

    <title>{seo?.seoTitle}</title>

    {seo?.meta?.map((item) => <meta {...item} />)}
    {seo?.links?.map((item) => <link {...item} />)}
    {
      seo?.jsonLd?.map((item) => (
        <script type="application/ld+json" set:html={JSON.stringify(item)} />
      ))
    }
  </head>
  <body>
    <Layout
      uri={uri}
      lang={lang}
      siteHandle={siteHandle}
      siteId={siteId}
      typeHandle={typeHandle}
      sectionHandle={sectionHandle}
      entryId={entryId}
      translations={translations}
      token={token}
      xCraftPreview={xCraftPreview}
      xCraftLivePreview={xCraftLivePreview}
    />
  </body>
</html>

<script is:inline>
  document.documentElement.setAttribute(
    "data-theme",
    localStorage.getItem("theme") || "default",
  );
</script>
