---
const {
    PUBLIC_LIVE_PREVIEW,
    PUBLIC_API_URL,
    PUPLIC_API_TOKEN
} = import.meta.env;
import pageQuery from '../graphql/entry.page.graphql'
import { useGraphqlQuery } from '../composables/useGraphqlQuery';
import { useGetCurrentSite } from '../composables/useGetCurrentSite';
import { print } from 'graphql/language/printer';

const { searchParams } = Astro.url
const uri = Astro.params.uri === undefined ? '__home__' : String(Astro.params.uri);
const {
    handle: currentSiteHandle,
    language: currentSiteLanguage,
    uri: currentUri
} = useGetCurrentSite({ uri })
const { data: { page } } = await useGraphqlQuery({
    query: print(pageQuery),
    routeQuery: Object.fromEntries(searchParams),
    variables: {
        uri: currentUri,
        site: currentSiteHandle
    }
})
if (!page) {
    return new Response(null, {
        status: 404,
        statusText: 'Not found'
    });
}

---

<h1>{uri}: {page.title}</h1>
<h2>Live preview: {PUBLIC_LIVE_PREVIEW}</h2>